default:
    image: 'cimg/node:22.13.0-browsers'

include:
    - project: 'ci-cd/templates'
      ref: master
      file: '/prodsec/.oss-scan.yml'

cache:
    key:
        files:
            - pnpm-lock.yaml
    paths:
        - './node_modules'
        - './packages/*/node_modules'

.default-setup: &pnpm-setup
    before_script:
        - sudo npm install -g pnpm@10.12.1

stages:
    - setup
    - build
    - test
    - release

pnpm_install:
    <<: *pnpm-setup
    stage: setup
    script:
        - pnpm install --frozen-lockfile

check_version:
    <<: *pnpm-setup
    stage: build
    script:
        - pnpm run version:check

check_tag:
    <<: *pnpm-setup
    stage: build
    only:
        - /^v.*/
    script:
        - pnpm run tag:check

lint:
    <<: *pnpm-setup
    stage: build
    script:
        - pnpm run lint
        - pnpm run lint:markdown

build:
    <<: *pnpm-setup
    stage: build
    only:
        - /^[^v].*/
    artifacts:
        paths:
            - packages/*/dist/
            - packages/build-plugins/tests/project/dist/
    script:
        - pnpm run compile

build_artifacts:
    <<: *pnpm-setup
    stage: build
    only:
        - /^(v\d+\.\d+\.\d+(-[a-zA-Z]+\.\d)?|main)$/
    artifacts:
        paths:
            - artifacts/
    script:
        - if [ ! -d "artifacts" ]; then mkdir artifacts; fi
        - pnpm run compile
        - pnpm pack --pack-destination artifacts --filter "./packages/session-recorder" --filter "./packages/web" --filter "./packages/build-plugins"
        - cp packages/web/dist/artifacts/* artifacts/
        - cp packages/session-recorder/dist/artifacts/* artifacts/
        - shasum -a 256 artifacts/* > artifacts/checksums.txt

unit_test:
    stage: test
    script:
        - pnpm install --frozen-lockfile
        - pnpm exec playwright install --with-deps
        - pnpm run compile
        - pnpm run test:unit --browser.name chromium

oss-scan:
    stage: test
    extends: .oss-scan

release_npm:
    <<: *pnpm-setup
    artifacts:
        paths:
            - artifacts/
    stage: release
    only:
        - /^v\d+\.\d+\.\d+(-(alpha|beta|rc)\.\d+)?$/
    script:
        - echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
        - |
            tag_flag=""
            if [[ $CI_COMMIT_TAG =~ -([a-zA-Z]+)\.[0-9]+$ ]]; then
                tag_name="${BASH_REMATCH[1]}"
                tag_flag="--tag $tag_name"
                echo "Publishing with tag: $tag_name"
            else
                echo "No tag suffix found, publishing without tag"
            fi

            for f in artifacts/*.tgz; do
              pnpm publish --no-git-checks $tag_flag "./$f"
            done
        - rm -f ~/.npmrc

release_github:
    artifacts:
        paths:
            - artifacts/
    stage: release
    only:
        - /^(v\d+\.\d+\.\d+(-[a-zA-Z]+\.\d)?|main)$/
    script:
        - |
            if [[ ! $CI_COMMIT_TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-beta\.[0-9]+)?$ ]]; then
              echo "Tag does not match allowed format (vX.Y.Z or vX.Y.Z-beta.N), skipping..."
              exit 0
            fi
        - sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key 23F3D4EA75716059
        - echo "deb [arch=$(dpkg --print-architecture)] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        - sudo apt update
        - sudo apt install gh
        - |
            prerelease_flag=""
            if [[ "$CI_COMMIT_REF_NAME" == *"-beta"* ]]; then
              prerelease_flag="--prerelease"
            fi
            gh release create v${CI_COMMIT_REF_NAME:1} ./artifacts/* --target $CI_COMMIT_SHA --repo $GITHUB_REPOSITORY $prerelease_flag

release_cdn:
    <<: *pnpm-setup
    artifacts:
        paths:
            - artifacts/
    stage: release
    only:
        - /^(v\d+\.\d+\.\d+(-[a-zA-Z]+\.\d)?|main)$/
    needs: ['release_github']
    id_tokens:
        CI_JOB_JWT:
            aud: $CICD_VAULT_ADDR
    script:
        - pnpm install --frozen-lockfile
        # authenticate and release to CDN
        - creds-helper init && eval $(creds-helper aws --eval aws:v1/o11y-infra/role/o11y_gdi_otel_js_web_releaser_role)
        - pnpm exec tsx scripts/release-cdn.mts ${CI_COMMIT_REF_NAME}
