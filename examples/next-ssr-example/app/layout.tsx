/**
 *
 * Copyright 2020-2025 Splunk Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
import type { Metadata } from 'next'
import { Geist, Geist_Mono } from 'next/font/google'
import './globals.css'
import Script from 'next/script'

// Used in the styles
// eslint-disable-next-line @typescript-eslint/no-unused-vars
const geistSans = Geist({
	variable: '--font-geist-sans',
	subsets: ['latin'],
})

// Used in the styles
// eslint-disable-next-line @typescript-eslint/no-unused-vars
const geistMono = Geist_Mono({
	variable: '--font-geist-mono',
	subsets: ['latin'],
})

export const metadata: Metadata = {
	title: 'Create Next App',
	description: 'Generated by create next app',
}

export default function RootLayout({ children }: { children: React.ReactNode }) {
	// Set to true to enable CDN. The code is instrumented via NPM package currently
	// hence this is set to false to prevent collisions.
	const enableCDN = false
	return (
		<html lang="en">
			<head>
				{enableCDN && (
					<>
						<Script
							src={`https://cdn.signalfx.com/o11y-gdi-rum/${process.env.NEXT_PUBLIC_SPLUNK_CDN_VERSION}/splunk-otel-web.js`}
							strategy="beforeInteractive"
							crossOrigin="anonymous"
						/>
						<Script
							id="splunk-rum-init"
							strategy="beforeInteractive"
							dangerouslySetInnerHTML={{
								__html: `
							  SplunkRum.init({
								realm: "${process.env.NEXT_PUBLIC_SPLUNK_REALM}",
								rumAccessToken: "${process.env.NEXT_PUBLIC_SPLUNK_RUM_ACCESS_TOKEN}",
								applicationName: "${process.env.NEXT_PUBLIC_SPLUNK_RUM_DEPLOYMENT_ENVIROMENT}",
								deploymentEnvironment: "${process.env.NEXT_PUBLIC_SPLUNK_RUM_DEPLOYMENT_ENVIROMENT}",
							  });
							`,
							}}
						/>
						<Script
							src={`https://cdn.signalfx.com/o11y-gdi-rum/${process.env.NEXT_PUBLIC_SPLUNK_CDN_VERSION}/splunk-otel-web-session-recorder.js`}
							strategy="beforeInteractive"
							crossOrigin="anonymous"
						/>
						<Script
							id="splunk-rum-init"
							strategy="beforeInteractive"
							dangerouslySetInnerHTML={{
								__html: `
								SplunkSessionRecorder.init({
									realm: "${process.env.NEXT_PUBLIC_SPLUNK_REALM}",
									rumAccessToken: "${process.env.NEXT_PUBLIC_SPLUNK_RUM_ACCESS_TOKEN}"
								});
							`,
							}}
						/>
					</>
				)}
			</head>
			<body>{children}</body>
		</html>
	)
}
